<#@ Template Inherits="NuPattern.Library.ModelElementTextTransformation" HostSpecific="True" Debug="True" #>
<#@ ModelElement Type="NuPattern.Runtime.IProductElement" Processor="ModelElementProcessor" #>
<#@ Assembly Name="NuPattern.Runtime.Interfaces.dll" #>
<#@ Assembly Name="NServiceBusStudio.Automation.dll" #>
<#@ Import Namespace="global::NuPattern.Runtime" #>
<#@ Import Namespace="global::NServiceBusStudio" #>
<#@ Import Namespace="System.Linq" #>
<#  var icommandlink = ((IProductElement)this.Element).As<ICommandLink>(); 
	var icommandCodeIdentifier = icommandlink.CommandReference.Value.CodeIdentifier;
#>
using System;
using NServiceBus;
using <#= icommandlink.CommandReference.Value.Parent.Namespace #>;

namespace <#= icommandlink.Namespace #>
{
    public partial class <#= icommandlink.ComponentName #><#= icommandlink.GetClassNameSuffix() #><#= icommandlink.GetBaseTypeCodeDefinition() #>
    {
        public void Send(<#= icommandCodeIdentifier #> message)
		{
			Bus.Send(message);	
		}

        public IBus Bus { get; set; }
    }

<# if (icommandlink.SenderNeedsRegistration)
	{ #>

   public class <#= icommandlink.ComponentName #>Registration : INeedInitialization
   {
       public void Init()
       {
           Configure.Instance.Configurer.ConfigureComponent<<#= icommandlink.ComponentName #>>(DependencyLifecycle.InstancePerCall);
       }
   }

<# } #>
<# if (icommandlink.GetBaseTypeCodeDefinition() != string.Empty)
	{
#>
    public interface I<#= icommandlink.ComponentName #>
    {
        void Send(<#= icommandCodeIdentifier #> message);
    }
<# } #>
}