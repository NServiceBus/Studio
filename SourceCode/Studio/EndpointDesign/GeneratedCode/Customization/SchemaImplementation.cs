
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using NServiceBus.Modeling.EndpointDesign.Interfaces;

namespace NServiceBus.Modeling.EndpointDesign
{
	/// <summary>
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[GeneratedCode("NServiceBus.Modeling.EndpointDesign", "1.0.0.0")]
	public partial class EndpointModel : IEndpointModel
	{ 
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.EndpointModelHasEvents.EndpointModel
		/// </summary>
		IEnumerable<IEvent> IEndpointModel.Events
		{
			get { return this.Events.Cast<IEvent>(); }
		}
		
		/// <summary>
		/// Creates an instance of a child <see cref="IEvent"/>.
		/// </summary>
		public IEvent CreateEvent()
		{
			return this.CreateEvent(null);
		}
		
		/// <summary>
		/// Creates an instance of a child <see cref="IEvent"/> with an optional initializer to perform 
		/// object initialization within the creation transaction.
		/// </summary>
		public IEvent CreateEvent(Action<IEvent> initializer)
		{
			using (var tx = this.Store.TransactionManager.BeginTransaction("Creating new instance of Event", this.IsSerializing()))
			{
				var instance = this.Create<Event>();
				if (initializer != null)
				{
					initializer(instance);
				}
		
				tx.Commit();
				return instance;
			}
		}
		
		/// <summary>
		/// Deletes an instance of a child <see cref="IEvent"/>.
		/// </summary>
		public void DeleteEvent(IEvent instance)
		{
			using (var tx = this.Store.TransactionManager.BeginTransaction("Deleting Event instance", this.IsSerializing()))
			{
				var modelElement = instance as Event;
				if (modelElement != null)
				{
					modelElement.Delete();
				}
		
				tx.Commit();
			}
		}
		
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.EndpointModelHasEndpoints.EndpointModel
		/// </summary>
		IEnumerable<IEndpoint> IEndpointModel.Endpoints
		{
			get { return this.Endpoints.Cast<IEndpoint>(); }
		}
		
		/// <summary>
		/// Creates an instance of a child <see cref="ISendEndpoint"/>.
		/// </summary>
		public ISendEndpoint CreateSendEndpoint()
		{
			return this.CreateSendEndpoint(null);
		}
		
		/// <summary>
		/// Creates an instance of a child <see cref="ISendEndpoint"/> with an optional initializer to perform 
		/// object initialization within the creation transaction.
		/// </summary>
		public ISendEndpoint CreateSendEndpoint(Action<ISendEndpoint> initializer)
		{
			using (var tx = this.Store.TransactionManager.BeginTransaction("Creating new instance of SendEndpoint", this.IsSerializing()))
			{
				var instance = this.Create<SendEndpoint>();
				if (initializer != null)
				{
					initializer(instance);
				}
		
				tx.Commit();
				return instance;
			}
		}
		
		/// <summary>
		/// Deletes an instance of a child <see cref="ISendEndpoint"/>.
		/// </summary>
		public void DeleteSendEndpoint(ISendEndpoint instance)
		{
			using (var tx = this.Store.TransactionManager.BeginTransaction("Deleting SendEndpoint instance", this.IsSerializing()))
			{
				var modelElement = instance as SendEndpoint;
				if (modelElement != null)
				{
					modelElement.Delete();
				}
		
				tx.Commit();
			}
		}
		
		/// <summary>
		/// Creates an instance of a child <see cref="ISendReceiveEndpoint"/>.
		/// </summary>
		public ISendReceiveEndpoint CreateSendReceiveEndpoint()
		{
			return this.CreateSendReceiveEndpoint(null);
		}
		
		/// <summary>
		/// Creates an instance of a child <see cref="ISendReceiveEndpoint"/> with an optional initializer to perform 
		/// object initialization within the creation transaction.
		/// </summary>
		public ISendReceiveEndpoint CreateSendReceiveEndpoint(Action<ISendReceiveEndpoint> initializer)
		{
			using (var tx = this.Store.TransactionManager.BeginTransaction("Creating new instance of SendReceiveEndpoint", this.IsSerializing()))
			{
				var instance = this.Create<SendReceiveEndpoint>();
				if (initializer != null)
				{
					initializer(instance);
				}
		
				tx.Commit();
				return instance;
			}
		}
		
		/// <summary>
		/// Deletes an instance of a child <see cref="ISendReceiveEndpoint"/>.
		/// </summary>
		public void DeleteSendReceiveEndpoint(ISendReceiveEndpoint instance)
		{
			using (var tx = this.Store.TransactionManager.BeginTransaction("Deleting SendReceiveEndpoint instance", this.IsSerializing()))
			{
				var modelElement = instance as SendReceiveEndpoint;
				if (modelElement != null)
				{
					modelElement.Delete();
				}
		
				tx.Commit();
			}
		}
		
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.EndpointModelHasCommands.EndpointModel
		/// </summary>
		IEnumerable<ICommand> IEndpointModel.Commands
		{
			get { return this.Commands.Cast<ICommand>(); }
		}
		
		/// <summary>
		/// Creates an instance of a child <see cref="ICommand"/>.
		/// </summary>
		public ICommand CreateCommand()
		{
			return this.CreateCommand(null);
		}
		
		/// <summary>
		/// Creates an instance of a child <see cref="ICommand"/> with an optional initializer to perform 
		/// object initialization within the creation transaction.
		/// </summary>
		public ICommand CreateCommand(Action<ICommand> initializer)
		{
			using (var tx = this.Store.TransactionManager.BeginTransaction("Creating new instance of Command", this.IsSerializing()))
			{
				var instance = this.Create<Command>();
				if (initializer != null)
				{
					initializer(instance);
				}
		
				tx.Commit();
				return instance;
			}
		}
		
		/// <summary>
		/// Deletes an instance of a child <see cref="ICommand"/>.
		/// </summary>
		public void DeleteCommand(ICommand instance)
		{
			using (var tx = this.Store.TransactionManager.BeginTransaction("Deleting Command instance", this.IsSerializing()))
			{
				var modelElement = instance as Command;
				if (modelElement != null)
				{
					modelElement.Delete();
				}
		
				tx.Commit();
			}
		}
	
		/// <summary>
		/// Gets a value indicating whether this instance is serializing.
		/// </summary>
		/// <value>
		/// <c>true</c> if this instance is serializing; otherwise, <c>false</c>.
		/// </value>
		protected bool IsSerializing()
		{
			return this.Store.TransactionManager.InTransaction &&
				this.Store.TransactionManager.CurrentTransaction.IsSerializing;
		}
	}
}
namespace NServiceBus.Modeling.EndpointDesign
{
	/// <summary>
	/// Elements embedded in the model. Appear as boxes on the diagram.
	/// </summary>
	[GeneratedCode("NServiceBus.Modeling.EndpointDesign", "1.0.0.0")]
	public partial class SendEndpoint : ISendEndpoint
	{ 
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.SendEndpointEmitsCommands.SendEndpoint
		/// </summary>
		IEnumerable<ICommand> ISendEndpoint.EmittedCommands
		{
			get { return this.EmittedCommands.Cast<ICommand>(); }
		}
	}
}
namespace NServiceBus.Modeling.EndpointDesign
{
	/// <summary>
	/// Description for NServiceBus.Modeling.EndpointDesign.NamedElement
	/// </summary>
	[GeneratedCode("NServiceBus.Modeling.EndpointDesign", "1.0.0.0")]
	public partial class NamedElement : INamedElement
	{ 
		/// <summary>
		/// Gets a value indicating whether this instance is serializing.
		/// </summary>
		/// <value>
		/// <c>true</c> if this instance is serializing; otherwise, <c>false</c>.
		/// </value>
		protected bool IsSerializing()
		{
			return this.Store.TransactionManager.InTransaction &&
				this.Store.TransactionManager.CurrentTransaction.IsSerializing;
		}
	}
}
namespace NServiceBus.Modeling.EndpointDesign
{
	/// <summary>
	/// Description for NServiceBus.Modeling.EndpointDesign.SendReceiveEndpoint
	/// </summary>
	[GeneratedCode("NServiceBus.Modeling.EndpointDesign", "1.0.0.0")]
	public partial class SendReceiveEndpoint : ISendReceiveEndpoint
	{ 
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.CommandIsProcessedBySendReceiveEndpoint.SendReceiveEndpoint
		/// </summary>
		IEnumerable<ICommand> ISendReceiveEndpoint.ProcessCommands
		{
			get { return this.ProcessCommands.Cast<ICommand>(); }
		}
		
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.EventsAreProcessedBySendReceiveEndpoints.SendReceiveEndpoint
		/// </summary>
		IEnumerable<IEvent> ISendReceiveEndpoint.ProcessEvents
		{
			get { return this.ProcessEvents.Cast<IEvent>(); }
		}
		
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.SendReceiveEndpointEmitsEvents.SendReceiveEndpoint
		/// </summary>
		IEnumerable<IEvent> ISendReceiveEndpoint.EmittedEvents
		{
			get { return this.EmittedEvents.Cast<IEvent>(); }
		}
		
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.SendReceiveEndpointEmitCommands.SendReceiveEndpoint
		/// </summary>
		IEnumerable<ICommand> ISendReceiveEndpoint.EmittedCommands
		{
			get { return this.EmittedCommands.Cast<ICommand>(); }
		}
	}
}
namespace NServiceBus.Modeling.EndpointDesign
{
	/// <summary>
	/// Description for NServiceBus.Modeling.EndpointDesign.Event
	/// </summary>
	[GeneratedCode("NServiceBus.Modeling.EndpointDesign", "1.0.0.0")]
	public partial class Event : IEvent
	{ 
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.EndpointModelHasEvents.Event
		/// </summary>
		IEndpointModel IEvent.EndpointModel
		{
			get { return this.EndpointModel; }
			set { this.EndpointModel = (EndpointModel)value; }
		}
		
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.EventsAreProcessedBySendReceiveEndpoints.Event
		/// </summary>
		IEnumerable<ISendReceiveEndpoint> IEvent.ProcessingEndpoints
		{
			get { return this.ProcessingEndpoints.Cast<ISendReceiveEndpoint>(); }
		}
		
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.SendReceiveEndpointEmitsEvents.Event
		/// </summary>
		IEnumerable<ISendReceiveEndpoint> IEvent.EmitterEndpoint
		{
			get { return this.EmitterEndpoint.Cast<ISendReceiveEndpoint>(); }
		}
	}
}
namespace NServiceBus.Modeling.EndpointDesign
{
	/// <summary>
	/// Description for NServiceBus.Modeling.EndpointDesign.Command
	/// </summary>
	[GeneratedCode("NServiceBus.Modeling.EndpointDesign", "1.0.0.0")]
	public partial class Command : ICommand
	{ 
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.EndpointModelHasCommands.Command
		/// </summary>
		IEndpointModel ICommand.EndpointModel
		{
			get { return this.EndpointModel; }
			set { this.EndpointModel = (EndpointModel)value; }
		}
		
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.CommandIsProcessedBySendReceiveEndpoint.Command
		/// </summary>
		IEnumerable<ISendReceiveEndpoint> ICommand.ProcessingEndpoint
		{
			get { return this.ProcessingEndpoint.Cast<ISendReceiveEndpoint>(); }
		}
		
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.SendEndpointEmitsCommands.Command
		/// </summary>
		IEnumerable<ISendEndpoint> ICommand.SendEndpoints
		{
			get { return this.SendEndpoints.Cast<ISendEndpoint>(); }
		}
		
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.SendReceiveEndpointEmitCommands.Command
		/// </summary>
		IEnumerable<ISendReceiveEndpoint> ICommand.SendReceiveEndpoints
		{
			get { return this.SendReceiveEndpoints.Cast<ISendReceiveEndpoint>(); }
		}
	}
}
namespace NServiceBus.Modeling.EndpointDesign
{
	/// <summary>
	/// Description for NServiceBus.Modeling.EndpointDesign.Endpoint
	/// </summary>
	[GeneratedCode("NServiceBus.Modeling.EndpointDesign", "1.0.0.0")]
	public partial class Endpoint : IEndpoint
	{ 
		/// <summary>
		/// Description for NServiceBus.Modeling.EndpointDesign.EndpointModelHasEndpoints.Endpoint
		/// </summary>
		IEndpointModel IEndpoint.EndpointModel
		{
			get { return this.EndpointModel; }
			set { this.EndpointModel = (EndpointModel)value; }
		}
	}
}
